{"ast":null,"code":"function isBankHoliday(date){// static holidays\nvar isDate=function isDate(d,month,date){return d.getMonth()==month-1&&d.getDate()==date;};if(isDate(date,1,1)){return\"New Year\";}else if(isDate(date,7,4)){return\"Independence Day\";}else if(isDate(date,11,11)){return\"Veterans Day\";}else if(isDate(date,12,25)){return\"Christmas Day\";}// dynamic holidays\nvar isDay=function isDay(d,month,day,occurance){if(d.getMonth()==month-1&&d.getDay()==day){if(occurance>0){return occurance==Math.ceil(d.getDate()/7);}else{// check last occurance\nvar _d=new Date(d);_d.setDate(d.getDate()+7);return _d.getMonth()>d.getMonth();}}return false;};if(isDay(date,1,1,3)){return\"MLK Day\";}else if(isDay(date,2,1,3)){return\"Presidents Day\";}else if(isDay(date,5,1,-1)){return\"Memorial Day\";}else if(isDay(date,9,1,1)){return\"Labor Day\";}else if(isDay(date,10,1,2)){return\"Columbus Day\";}else if(isDay(date,11,4,4)){return\"Thanksgiving Day\";}// not a holiday\nreturn\"\";}export function findDaysToShip(product,date){var maxDaysToShip=product.maxBusinessDaysToShip;var days=0;if(!product.shipOnWeekends){days=getFinalShipDate(date,maxDaysToShip);console.log(\"day: \".concat(days));return days;}var approxShipDate=new Date();approxShipDate=new Date(approxShipDate.setDate(date.getDate()+maxDaysToShip-1));// const stringDate = `${current.getDate()}-${current.getMonth()+1}-${current.getFullYear()}`;\nreturn approxShipDate;}function getFinalShipDate(d1,maxDaysToShip){var d2=new Date(d1);d2=new Date(d2.setDate(d2.getUTCDate()));var dayCount=0;var holidayCount=0;while(maxDaysToShip>0){var day=d1.getDay();if(isBankHoliday(d1)||day===6||day===0){++holidayCount;}else{dayCount++;maxDaysToShip--;}d1.setDate(d1.getUTCDate()+1);}d2=new Date(d2.setDate(d2.getUTCDate()+holidayCount+dayCount-1));return d2;}","map":{"version":3,"names":["isBankHoliday","date","isDate","d","month","getMonth","getDate","isDay","day","occurance","getDay","Math","ceil","_d","Date","setDate","findDaysToShip","product","maxDaysToShip","maxBusinessDaysToShip","days","shipOnWeekends","getFinalShipDate","console","log","concat","approxShipDate","d1","d2","getUTCDate","dayCount","holidayCount"],"sources":["/Users/surabhi/Documents/AccumulaTest/shipping-tracker/src/utils/util.js"],"sourcesContent":["function isBankHoliday(date) {\n    \n    // static holidays\n    const isDate = (d, month, date) => {\n        return d.getMonth() == (month - 1) && d.getDate() == date;\n    };\n    if (isDate(date, 1, 1)) { return \"New Year\"; }\n    else if (isDate(date, 7, 4)) { return \"Independence Day\"; }\n    else if (isDate(date, 11, 11)) { return \"Veterans Day\"; }\n    else if (isDate(date, 12, 25)) { return \"Christmas Day\"; }\n\n    // dynamic holidays\n    const isDay = (d, month, day, occurance) => {\n        if (d.getMonth() == (month - 1) && d.getDay() == day) {\n            if (occurance > 0) {\n                return occurance == Math.ceil(d.getDate() / 7);\n            } else {\n                // check last occurance\n                let _d = new Date(d);\n                _d.setDate(d.getDate() + 7);\n                return _d.getMonth() > d.getMonth();\n            }\n        }\n        return false;\n    };\n    if (isDay(date, 1, 1, 3)) { return \"MLK Day\"; }\n    else if (isDay(date, 2, 1, 3)) { return \"Presidents Day\"; }\n    else if (isDay(date, 5, 1, -1)) { return \"Memorial Day\"; }\n    else if (isDay(date, 9, 1, 1)) { return \"Labor Day\"; }\n    else if (isDay(date, 10, 1, 2)) { return \"Columbus Day\"; }\n    else if (isDay(date, 11, 4, 4)) { return \"Thanksgiving Day\"; }\n\n    // not a holiday\n    return \"\";\n}\n\nexport function findDaysToShip(product, date) {\n    let maxDaysToShip = product.maxBusinessDaysToShip\n\n    let days = 0;\n\n    if (!product.shipOnWeekends) {\n        days = getFinalShipDate(date, maxDaysToShip);\n        console.log(`day: ${days}`);\n        return days;\n    }\n    \n    let approxShipDate = new Date();\n    approxShipDate = new Date(approxShipDate.setDate(date.getDate() + maxDaysToShip - 1));\n\n    // const stringDate = `${current.getDate()}-${current.getMonth()+1}-${current.getFullYear()}`;\n                \n        \n    return approxShipDate;\n}\n\nfunction getFinalShipDate(d1, maxDaysToShip) {\n    let d2 = new Date(d1);\n    d2 = new Date(d2.setDate(d2.getUTCDate()));\n    let dayCount = 0;\n    let holidayCount = 0;\n    \n    while ( maxDaysToShip > 0) {\n        var day = d1.getDay();\n        if(isBankHoliday(d1) || (day === 6 || day === 0)) {\n            ++holidayCount\n        } else {\n            dayCount++;\n            maxDaysToShip--;\n        }\n        d1.setDate(d1.getUTCDate() + 1);\n    }\n\n    d2 = new Date(d2.setDate(d2.getUTCDate() + holidayCount + dayCount - 1));\n    return d2;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}