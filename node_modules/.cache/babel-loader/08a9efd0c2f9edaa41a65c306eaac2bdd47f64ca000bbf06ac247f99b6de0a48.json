{"ast":null,"code":"var moment = require('moment'); // require\n\nexport function findDaysToShip(product) {\n  console.log(product);\n  let maxDaysToShip = product.maxBusinessDaysToShip;\n  const current = new Date();\n  let days = 0;\n  if (!product.shipOnWeekends) {\n    days = getFinalShipDate(current, maxDaysToShip);\n    console.log(`day: ${days}`);\n    return days;\n  }\n  let approxShipDate = new Date();\n  approxShipDate = new Date(approxShipDate.setDate(current.getDate() + maxDaysToShip));\n  console.log(approxShipDate);\n\n  // const stringDate = `${current.getDate()}-${current.getMonth()+1}-${current.getFullYear()}`;\n\n  return approxShipDate;\n}\nfunction getFinalShipDate(d1, maxDaysToShip) {\n  let d2 = new Date(d1);\n  d2 = new Date(d2.setDate(d2.getDate()));\n  let weekendCount = 0;\n  let dayCount = 0;\n  while (maxDaysToShip > 0) {\n    var day = d1.getDay();\n    if (day === 6 || day === 0) {\n      ++weekendCount;\n    } else {\n      dayCount++;\n      maxDaysToShip--;\n    }\n    d1.setDate(d1.getDate() + 1);\n  }\n  d2 = d2.setDate(d2.getDate() + weekendCount + dayCount);\n  return d2;\n}","map":{"version":3,"names":["moment","require","findDaysToShip","product","console","log","maxDaysToShip","maxBusinessDaysToShip","current","Date","days","shipOnWeekends","getFinalShipDate","approxShipDate","setDate","getDate","d1","d2","weekendCount","dayCount","day","getDay"],"sources":["/Users/surabhi/Documents/AccumulaTest/shipping-tracker/src/utils/util.js"],"sourcesContent":["var moment = require('moment'); // require\n\nexport function findDaysToShip(product) {\n    console.log(product)\n    let maxDaysToShip = product.maxBusinessDaysToShip\n\n    const current = new Date();\n    let days = 0;\n\n    if (!product.shipOnWeekends) {\n        days = getFinalShipDate(current, maxDaysToShip);\n        console.log(`day: ${days}`);\n        return days;\n    }\n    \n    let approxShipDate = new Date();\n    approxShipDate = new Date(approxShipDate.setDate(current.getDate() + maxDaysToShip));\n    console.log(approxShipDate);\n\n    // const stringDate = `${current.getDate()}-${current.getMonth()+1}-${current.getFullYear()}`;\n                \n        \n    return approxShipDate;\n}\n\nfunction getFinalShipDate(d1, maxDaysToShip) {\n    let d2 = new Date(d1);\n    d2 = new Date(d2.setDate(d2.getDate()));\n    let weekendCount = 0;\n    let dayCount = 0;\n\n    while ( maxDaysToShip > 0) {\n        var day = d1.getDay();\n        if (day === 6 || day === 0) {\n            ++weekendCount;\n        } else {\n            dayCount++;\n            maxDaysToShip--;\n        }\n        d1.setDate(d1.getDate() + 1);\n    }\n\n    d2 = d2.setDate(d2.getDate() + weekendCount + dayCount);\n    return d2;\n}"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;AAEhC,OAAO,SAASC,cAAcA,CAACC,OAAO,EAAE;EACpCC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACpB,IAAIG,aAAa,GAAGH,OAAO,CAACI,qBAAqB;EAEjD,MAAMC,OAAO,GAAG,IAAIC,IAAI,EAAE;EAC1B,IAAIC,IAAI,GAAG,CAAC;EAEZ,IAAI,CAACP,OAAO,CAACQ,cAAc,EAAE;IACzBD,IAAI,GAAGE,gBAAgB,CAACJ,OAAO,EAAEF,aAAa,CAAC;IAC/CF,OAAO,CAACC,GAAG,CAAE,QAAOK,IAAK,EAAC,CAAC;IAC3B,OAAOA,IAAI;EACf;EAEA,IAAIG,cAAc,GAAG,IAAIJ,IAAI,EAAE;EAC/BI,cAAc,GAAG,IAAIJ,IAAI,CAACI,cAAc,CAACC,OAAO,CAACN,OAAO,CAACO,OAAO,EAAE,GAAGT,aAAa,CAAC,CAAC;EACpFF,OAAO,CAACC,GAAG,CAACQ,cAAc,CAAC;;EAE3B;;EAGA,OAAOA,cAAc;AACzB;AAEA,SAASD,gBAAgBA,CAACI,EAAE,EAAEV,aAAa,EAAE;EACzC,IAAIW,EAAE,GAAG,IAAIR,IAAI,CAACO,EAAE,CAAC;EACrBC,EAAE,GAAG,IAAIR,IAAI,CAACQ,EAAE,CAACH,OAAO,CAACG,EAAE,CAACF,OAAO,EAAE,CAAC,CAAC;EACvC,IAAIG,YAAY,GAAG,CAAC;EACpB,IAAIC,QAAQ,GAAG,CAAC;EAEhB,OAAQb,aAAa,GAAG,CAAC,EAAE;IACvB,IAAIc,GAAG,GAAGJ,EAAE,CAACK,MAAM,EAAE;IACrB,IAAID,GAAG,KAAK,CAAC,IAAIA,GAAG,KAAK,CAAC,EAAE;MACxB,EAAEF,YAAY;IAClB,CAAC,MAAM;MACHC,QAAQ,EAAE;MACVb,aAAa,EAAE;IACnB;IACAU,EAAE,CAACF,OAAO,CAACE,EAAE,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;EAChC;EAEAE,EAAE,GAAGA,EAAE,CAACH,OAAO,CAACG,EAAE,CAACF,OAAO,EAAE,GAAGG,YAAY,GAAGC,QAAQ,CAAC;EACvD,OAAOF,EAAE;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}