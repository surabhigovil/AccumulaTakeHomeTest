{"ast":null,"code":"var date = new Date();\nexport function findDaysToShip(product) {\n  let weekendsIncluded = product.shipOnWeekends;\n  let maxDaysToShip = product.maxBusinessDaysToShip;\n  console.log(maxDaysToShip);\n  let shippingDate = maxDaysToShip;\n  const current_day = date.getDay() - 1; // Week day, starting on Monday\n  const weekend_days = 2 * parseInt((current_day + maxDaysToShip) / 5);\n  startDate.setDate(changed_to.getDate() + days + weekend_days);\n  var startDate = \"9-DEC-2011\";\n  startDate = new Date(startDate.replace(/-/g, \"/\"));\n  var endDate = \"\",\n    noOfDaysToAdd = 13,\n    count = 0;\n  while (count < noOfDaysToAdd) {\n    endDate = new Date(startDate.setDate(startDate.getDate() + 1));\n    if (endDate.getDay() != 0 && endDate.getDay() != 6) {\n      //Date.getDay() gives weekday starting from 0(Sunday) to 6(Saturday)\n      count++;\n    }\n  }\n  return shippingDate;\n}","map":{"version":3,"names":["date","Date","findDaysToShip","product","weekendsIncluded","shipOnWeekends","maxDaysToShip","maxBusinessDaysToShip","console","log","shippingDate","current_day","getDay","weekend_days","parseInt","startDate","setDate","changed_to","getDate","days","replace","endDate","noOfDaysToAdd","count"],"sources":["/Users/surabhi/Documents/AccumulaTest/shipping-tracker/src/utils/util.js"],"sourcesContent":["var date = new Date();\n\nexport function findDaysToShip(product) {\n    let weekendsIncluded = product.shipOnWeekends\n    let maxDaysToShip = product.maxBusinessDaysToShip\n    console.log(maxDaysToShip)\n    let shippingDate = maxDaysToShip\n    const current_day = date.getDay() - 1; // Week day, starting on Monday\n    const weekend_days = 2 * parseInt((current_day + maxDaysToShip) / 5);\n    startDate.setDate(changed_to.getDate() + days + weekend_days);\n\n    var startDate = \"9-DEC-2011\";\n    startDate = new Date(startDate.replace(/-/g, \"/\"));\n    var endDate = \"\", noOfDaysToAdd = 13, count = 0;\n    while(count < noOfDaysToAdd){\n        endDate = new Date(startDate.setDate(startDate.getDate() + 1));\n        if(endDate.getDay() != 0 && endDate.getDay() != 6){\n        //Date.getDay() gives weekday starting from 0(Sunday) to 6(Saturday)\n        count++;\n        }\n    }\n    return shippingDate\n}"],"mappings":"AAAA,IAAIA,IAAI,GAAG,IAAIC,IAAI,EAAE;AAErB,OAAO,SAASC,cAAcA,CAACC,OAAO,EAAE;EACpC,IAAIC,gBAAgB,GAAGD,OAAO,CAACE,cAAc;EAC7C,IAAIC,aAAa,GAAGH,OAAO,CAACI,qBAAqB;EACjDC,OAAO,CAACC,GAAG,CAACH,aAAa,CAAC;EAC1B,IAAII,YAAY,GAAGJ,aAAa;EAChC,MAAMK,WAAW,GAAGX,IAAI,CAACY,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;EACvC,MAAMC,YAAY,GAAG,CAAC,GAAGC,QAAQ,CAAC,CAACH,WAAW,GAAGL,aAAa,IAAI,CAAC,CAAC;EACpES,SAAS,CAACC,OAAO,CAACC,UAAU,CAACC,OAAO,EAAE,GAAGC,IAAI,GAAGN,YAAY,CAAC;EAE7D,IAAIE,SAAS,GAAG,YAAY;EAC5BA,SAAS,GAAG,IAAId,IAAI,CAACc,SAAS,CAACK,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;EAClD,IAAIC,OAAO,GAAG,EAAE;IAAEC,aAAa,GAAG,EAAE;IAAEC,KAAK,GAAG,CAAC;EAC/C,OAAMA,KAAK,GAAGD,aAAa,EAAC;IACxBD,OAAO,GAAG,IAAIpB,IAAI,CAACc,SAAS,CAACC,OAAO,CAACD,SAAS,CAACG,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;IAC9D,IAAGG,OAAO,CAACT,MAAM,EAAE,IAAI,CAAC,IAAIS,OAAO,CAACT,MAAM,EAAE,IAAI,CAAC,EAAC;MAClD;MACAW,KAAK,EAAE;IACP;EACJ;EACA,OAAOb,YAAY;AACvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}