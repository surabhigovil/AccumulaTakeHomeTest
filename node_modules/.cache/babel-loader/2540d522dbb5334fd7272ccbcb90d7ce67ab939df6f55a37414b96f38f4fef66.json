{"ast":null,"code":"export function findDaysToShip(product) {\n  console.log(product);\n  let weekendsIncluded = product.shipOnWeekends;\n  let maxDaysToShip = product.maxBusinessDaysToShip;\n  const current = new Date();\n  const date = `${current.getDate()}/${current.getMonth() + 1}/${current.getFullYear()}`;\n  console.log(date);\n  let shippingDate = maxDaysToShip;\n  var originalDate = `${current.getDate()}-${current.getMonth() + 1}-${current.getFullYear()}`;\n  var futureDate = moment(originalDate);\n  var currentDayOfWeek = futureDate.day(); // 0 = Sunday, 1 = Monday, ..., 6 = Saturday\n  var numberOfWeekends = Math.floor((currentDayOfWeek + numberOfWeekdays - 1) / 5); // calculate the number of weekends to skip over\n\n  futureDate.add(numberOfWeekdays + numberOfWeekends * 2, 'days'); // account for the 2 days per weekend\n\n  return futureDate;\n}","map":{"version":3,"names":["findDaysToShip","product","console","log","weekendsIncluded","shipOnWeekends","maxDaysToShip","maxBusinessDaysToShip","current","Date","date","getDate","getMonth","getFullYear","shippingDate","originalDate","futureDate","moment","currentDayOfWeek","day","numberOfWeekends","Math","floor","numberOfWeekdays","add"],"sources":["/Users/surabhi/Documents/AccumulaTest/shipping-tracker/src/utils/util.js"],"sourcesContent":["\nexport function findDaysToShip(product) {\n    console.log(product)\n    let weekendsIncluded = product.shipOnWeekends\n    let maxDaysToShip = product.maxBusinessDaysToShip\n    const current = new Date();\n    const date = `${current.getDate()}/${current.getMonth()+1}/${current.getFullYear()}`;\n    console.log(date)\n    let shippingDate = maxDaysToShip\n\n    var originalDate = `${current.getDate()}-${current.getMonth()+1}-${current.getFullYear()}`;\n    var futureDate = moment(originalDate);\n    var currentDayOfWeek = futureDate.day();            // 0 = Sunday, 1 = Monday, ..., 6 = Saturday\n    var numberOfWeekends = Math.floor((currentDayOfWeek + numberOfWeekdays - 1) / 5);   // calculate the number of weekends to skip over\n\n    futureDate.add(numberOfWeekdays + numberOfWeekends * 2, 'days');    // account for the 2 days per weekend\n\n    return futureDate;\n\n}"],"mappings":"AACA,OAAO,SAASA,cAAcA,CAACC,OAAO,EAAE;EACpCC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACpB,IAAIG,gBAAgB,GAAGH,OAAO,CAACI,cAAc;EAC7C,IAAIC,aAAa,GAAGL,OAAO,CAACM,qBAAqB;EACjD,MAAMC,OAAO,GAAG,IAAIC,IAAI,EAAE;EAC1B,MAAMC,IAAI,GAAI,GAAEF,OAAO,CAACG,OAAO,EAAG,IAAGH,OAAO,CAACI,QAAQ,EAAE,GAAC,CAAE,IAAGJ,OAAO,CAACK,WAAW,EAAG,EAAC;EACpFX,OAAO,CAACC,GAAG,CAACO,IAAI,CAAC;EACjB,IAAII,YAAY,GAAGR,aAAa;EAEhC,IAAIS,YAAY,GAAI,GAAEP,OAAO,CAACG,OAAO,EAAG,IAAGH,OAAO,CAACI,QAAQ,EAAE,GAAC,CAAE,IAAGJ,OAAO,CAACK,WAAW,EAAG,EAAC;EAC1F,IAAIG,UAAU,GAAGC,MAAM,CAACF,YAAY,CAAC;EACrC,IAAIG,gBAAgB,GAAGF,UAAU,CAACG,GAAG,EAAE,CAAC,CAAY;EACpD,IAAIC,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACJ,gBAAgB,GAAGK,gBAAgB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAG;;EAEpFP,UAAU,CAACQ,GAAG,CAACD,gBAAgB,GAAGH,gBAAgB,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,CAAI;;EAEpE,OAAOJ,UAAU;AAErB"},"metadata":{},"sourceType":"module","externalDependencies":[]}