{"ast":null,"code":"var moment = require('moment'); // require\n\nconst DATE_FORMAT = 'D-MMM-YYYY';\nconst SUNDAY = 0; // moment day index\nconst SATURDAY = 6; // moment day index\nconst WEEKENDS = [SATURDAY, SUNDAY];\nexport function findDaysToShip(product) {\n  console.log(product);\n  let weekendsIncluded = product.shipOnWeekends;\n  let maxDaysToShip = product.maxBusinessDaysToShip;\n  const current = new Date();\n  const stringDate = `${current.getDate()}-${current.getMonth() + 1}-${current.getFullYear()}`;\n  const date = moment(stringDate);\n  let count = 0;\n  while (maxDaysToShip > 0) {\n    date.add(1, 'day');\n\n    // Skip weekends\n    if (WEEKENDS.includes(date.day())) {\n      continue;\n    }\n\n    // Increment count\n    maxDaysToShip--;\n  }\n  return date;\n}","map":{"version":3,"names":["moment","require","DATE_FORMAT","SUNDAY","SATURDAY","WEEKENDS","findDaysToShip","product","console","log","weekendsIncluded","shipOnWeekends","maxDaysToShip","maxBusinessDaysToShip","current","Date","stringDate","getDate","getMonth","getFullYear","date","count","add","includes","day"],"sources":["/Users/surabhi/Documents/AccumulaTest/shipping-tracker/src/utils/util.js"],"sourcesContent":["var moment = require('moment'); // require\n\nconst DATE_FORMAT = 'D-MMM-YYYY';\nconst SUNDAY = 0; // moment day index\nconst SATURDAY = 6; // moment day index\nconst WEEKENDS = [SATURDAY, SUNDAY];\n\nexport function findDaysToShip(product) {\n    console.log(product)\n    let weekendsIncluded = product.shipOnWeekends\n    let maxDaysToShip = product.maxBusinessDaysToShip\n    const current = new Date();\n    const stringDate = `${current.getDate()}-${current.getMonth()+1}-${current.getFullYear()}`;\n\n    const date = moment(stringDate);\n    \n    let count = 0;\n            \n    while (maxDaysToShip > 0) {\n        date.add(1, 'day');\n\n        // Skip weekends\n        if (WEEKENDS.includes(date.day())) {\n            continue;\n        }\n\n        // Increment count\n        maxDaysToShip--;\n    }\n        \n    return date;\n}"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;AAEhC,MAAMC,WAAW,GAAG,YAAY;AAChC,MAAMC,MAAM,GAAG,CAAC,CAAC,CAAC;AAClB,MAAMC,QAAQ,GAAG,CAAC,CAAC,CAAC;AACpB,MAAMC,QAAQ,GAAG,CAACD,QAAQ,EAAED,MAAM,CAAC;AAEnC,OAAO,SAASG,cAAcA,CAACC,OAAO,EAAE;EACpCC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACpB,IAAIG,gBAAgB,GAAGH,OAAO,CAACI,cAAc;EAC7C,IAAIC,aAAa,GAAGL,OAAO,CAACM,qBAAqB;EACjD,MAAMC,OAAO,GAAG,IAAIC,IAAI,EAAE;EAC1B,MAAMC,UAAU,GAAI,GAAEF,OAAO,CAACG,OAAO,EAAG,IAAGH,OAAO,CAACI,QAAQ,EAAE,GAAC,CAAE,IAAGJ,OAAO,CAACK,WAAW,EAAG,EAAC;EAE1F,MAAMC,IAAI,GAAGpB,MAAM,CAACgB,UAAU,CAAC;EAE/B,IAAIK,KAAK,GAAG,CAAC;EAEb,OAAOT,aAAa,GAAG,CAAC,EAAE;IACtBQ,IAAI,CAACE,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC;;IAElB;IACA,IAAIjB,QAAQ,CAACkB,QAAQ,CAACH,IAAI,CAACI,GAAG,EAAE,CAAC,EAAE;MAC/B;IACJ;;IAEA;IACAZ,aAAa,EAAE;EACnB;EAEA,OAAOQ,IAAI;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}