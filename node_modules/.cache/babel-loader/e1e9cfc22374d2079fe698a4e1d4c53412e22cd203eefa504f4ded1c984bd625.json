{"ast":null,"code":"var moment = require('moment'); // require\n\nconst DATE_FORMAT = 'D-MMM-YYYY';\nconst SUNDAY = 0; // moment day index\nconst SATURDAY = 6; // moment day index\nconst WEEKENDS = [SATURDAY, SUNDAY];\nexport function findDaysToShip(product) {\n  console.log(product);\n  let maxDaysToShip = product.maxBusinessDaysToShip;\n  const current = new Date();\n  let days = 0;\n  if (!product.shipOnWeekends) {\n    days = getWeekendCount(current, maxDaysToShip);\n    console.log(days);\n    return days;\n  }\n  let approxShipDate = new Date(current.setDate(current.getDate() + maxDaysToShip));\n  console.log(approxShipDate);\n\n  // const stringDate = `${current.getDate()}-${current.getMonth()+1}-${current.getFullYear()}`;\n\n  // return stringDate;\n}\n\nfunction getWeekendCount(d1, maxDaysToShip) {\n  const d2 = new Date(d1.setDate(d1.getDate() + maxDaysToShip));\n  let weekendDaysCount = 0;\n  while (d1 < d2) {\n    var day = d1.getDay();\n    if (day === 6 || day === 0) {\n      ++weekendDaysCount;\n      d2.setDate(d2.getDate() + 1);\n    }\n    d1.setDate(d1.getDate() + 1);\n  }\n  // return weekendDaysCount;\n  return d2;\n}","map":{"version":3,"names":["moment","require","DATE_FORMAT","SUNDAY","SATURDAY","WEEKENDS","findDaysToShip","product","console","log","maxDaysToShip","maxBusinessDaysToShip","current","Date","days","shipOnWeekends","getWeekendCount","approxShipDate","setDate","getDate","d1","d2","weekendDaysCount","day","getDay"],"sources":["/Users/surabhi/Documents/AccumulaTest/shipping-tracker/src/utils/util.js"],"sourcesContent":["var moment = require('moment'); // require\n\nconst DATE_FORMAT = 'D-MMM-YYYY';\nconst SUNDAY = 0; // moment day index\nconst SATURDAY = 6; // moment day index\nconst WEEKENDS = [SATURDAY, SUNDAY];\n\nexport function findDaysToShip(product) {\n    console.log(product)\n    let maxDaysToShip = product.maxBusinessDaysToShip\n\n    const current = new Date();\n    let days = 0;\n\n    if (!product.shipOnWeekends) {\n        days = getWeekendCount(current, maxDaysToShip);\n        console.log(days);\n        return days;\n    }\n    \n    let approxShipDate = new Date(current.setDate(current.getDate() + maxDaysToShip));\n    console.log(approxShipDate);\n\n    // const stringDate = `${current.getDate()}-${current.getMonth()+1}-${current.getFullYear()}`;\n                \n        \n    // return stringDate;\n}\n\nfunction getWeekendCount(d1, maxDaysToShip) {\n    const d2 = new Date(d1.setDate(d1.getDate() + maxDaysToShip));\n    let weekendDaysCount = 0;\n\n    while (d1 < d2) {\n        var day = d1.getDay();\n        if ((day === 6) || (day === 0)) { ++weekendDaysCount; \n            d2.setDate(d2.getDate() + 1);}\n        d1.setDate(d1.getDate() + 1);\n    }\n    // return weekendDaysCount;\n    return d2;\n}"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;AAEhC,MAAMC,WAAW,GAAG,YAAY;AAChC,MAAMC,MAAM,GAAG,CAAC,CAAC,CAAC;AAClB,MAAMC,QAAQ,GAAG,CAAC,CAAC,CAAC;AACpB,MAAMC,QAAQ,GAAG,CAACD,QAAQ,EAAED,MAAM,CAAC;AAEnC,OAAO,SAASG,cAAcA,CAACC,OAAO,EAAE;EACpCC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACpB,IAAIG,aAAa,GAAGH,OAAO,CAACI,qBAAqB;EAEjD,MAAMC,OAAO,GAAG,IAAIC,IAAI,EAAE;EAC1B,IAAIC,IAAI,GAAG,CAAC;EAEZ,IAAI,CAACP,OAAO,CAACQ,cAAc,EAAE;IACzBD,IAAI,GAAGE,eAAe,CAACJ,OAAO,EAAEF,aAAa,CAAC;IAC9CF,OAAO,CAACC,GAAG,CAACK,IAAI,CAAC;IACjB,OAAOA,IAAI;EACf;EAEA,IAAIG,cAAc,GAAG,IAAIJ,IAAI,CAACD,OAAO,CAACM,OAAO,CAACN,OAAO,CAACO,OAAO,EAAE,GAAGT,aAAa,CAAC,CAAC;EACjFF,OAAO,CAACC,GAAG,CAACQ,cAAc,CAAC;;EAE3B;;EAGA;AACJ;;AAEA,SAASD,eAAeA,CAACI,EAAE,EAAEV,aAAa,EAAE;EACxC,MAAMW,EAAE,GAAG,IAAIR,IAAI,CAACO,EAAE,CAACF,OAAO,CAACE,EAAE,CAACD,OAAO,EAAE,GAAGT,aAAa,CAAC,CAAC;EAC7D,IAAIY,gBAAgB,GAAG,CAAC;EAExB,OAAOF,EAAE,GAAGC,EAAE,EAAE;IACZ,IAAIE,GAAG,GAAGH,EAAE,CAACI,MAAM,EAAE;IACrB,IAAKD,GAAG,KAAK,CAAC,IAAMA,GAAG,KAAK,CAAE,EAAE;MAAE,EAAED,gBAAgB;MAChDD,EAAE,CAACH,OAAO,CAACG,EAAE,CAACF,OAAO,EAAE,GAAG,CAAC,CAAC;IAAC;IACjCC,EAAE,CAACF,OAAO,CAACE,EAAE,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;EAChC;EACA;EACA,OAAOE,EAAE;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}